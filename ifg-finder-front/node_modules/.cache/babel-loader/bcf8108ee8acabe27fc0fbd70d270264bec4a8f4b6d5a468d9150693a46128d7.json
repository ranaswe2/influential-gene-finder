{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-spl3\\\\ifg-finder-front\\\\src\\\\views\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, Button, Row, Col, Card, CardHeader, CardBody, CardFooter, CardTitle, Input } from \"reactstrap\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Mocked table headers and body data for display and PDF export\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst thead = [\"Gene Name (Hugo Symbol)\", \"P Value\", \"Adjusted P Value\"];\nconst tbody = [{\n  data: [\"DDX5\", \"1.576534e-06\", \"0.029885\"]\n}, {\n  data: [\"SYNJ2\", \"2.176070e-06\", \"0.041250\"]\n}];\nfunction Dashboard() {\n  _s();\n  const [disease, setDisease] = useState(\"\");\n  const [datasetFile, setDatasetFile] = useState(null);\n  const [datasetId, setDatasetId] = useState(null); // To store uploaded dataset ID\n  const [splittingColumn, setSplittingColumn] = useState(\"\");\n  const [influentialGenes, setInfluentialGenes] = useState([]);\n  const [ifgFilePath, setIfgFilePath] = useState(\"\"); // To store IFG file path\n  const [geneCount, setGeneCount] = useState(0); // Total number of genes\n\n  const token = localStorage.getItem('token'); // Assuming JWT token is stored here\n\n  // Navigate hook for redirecting\n  const navigate = useNavigate();\n\n  // Upload Dataset Handler\n  const handleUploadDataset = async () => {\n    if (!disease || !datasetFile) {\n      alert(\"Please provide both disease and dataset file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"disease\", disease);\n    formData.append(\"dataset_path\", datasetFile);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/dataset/upload/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Dataset uploaded and preprocessed successfully\");\n        setDatasetId(data.dataset_id); // Store the dataset ID for next steps\n        setGeneCount(18750); // Mock gene count from the uploaded dataset\n      } else {\n        alert(\"Dataset upload failed\");\n      }\n    } catch (error) {\n      console.error(\"Error during dataset upload:\", error);\n      alert(\"An error occurred while uploading the dataset.\");\n    }\n  };\n\n  // Find Influential Genes (IFG) Handler\n  const handleFindIFG = async () => {\n    if (!datasetId || !splittingColumn) {\n      alert(\"Please provide a valid splitting column and upload dataset.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/ifg/find/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          dataset_id: datasetId,\n          splitting_columns: splittingColumn\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Influential genes calculated successfully\");\n        setInfluentialGenes([\"DDX5\", \"SYNJ2\"]); // Mock influential gene data\n        setIfgFilePath(data.ifg_file.ifg_file_path); // Store IFG file path\n      } else {\n        alert(\"Failed to calculate influential genes\");\n      }\n    } catch (error) {\n      console.error(\"Error during IFG calculation:\", error);\n      alert(\"An error occurred while calculating IFG.\");\n    }\n  };\n\n  // Download PDF Functionality\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Statistical Report\", 20, 10);\n    const columns = [\"Gene Name (Hugo Symbol)\", \"P Value\", \"Adjusted P Value\"];\n    const rows = tbody.map(item => item.data);\n    doc.autoTable({\n      startY: 20,\n      head: [columns],\n      body: rows\n    });\n    doc.save(\"statistical-report.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-tasks\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                responsive: true,\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"simple-text text-right\",\n                      color: \"primary\",\n                      children: \"Disease Information\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 120,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        placeholder: \"Enter Disease\",\n                        value: disease,\n                        onChange: e => setDisease(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 122,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"file\",\n                        onChange: e => setDatasetFile(e.target.files[0])\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 130,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-left\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"info\",\n                        onClick: handleUploadDataset,\n                        children: \"Upload Dataset\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 136,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 135,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-chart\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h4\",\n                children: \"Dataset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  margin: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: ['>', \" File Format Changed\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: ['>', \" Null Values Removed\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: ['>', \" Preprocessing Done\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-chart\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h4\",\n                children: \"Total Genes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  margin: '10px',\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: geneCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Genes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-chart\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h4\",\n                children: \"Total Attributes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  margin: '10px',\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"172\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: \"Columns\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-tasks\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                responsive: true,\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"simple-text text-right\",\n                      color: \"primary\",\n                      children: \"Splitting Attribute\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        placeholder: \"Enter Column Number\",\n                        value: splittingColumn,\n                        onChange: e => setSplittingColumn(e.target.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      className: \"text-left\",\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"primary\",\n                        onClick: handleFindIFG,\n                        children: \"Find IFGs\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-tasks\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h4\",\n                children: \"Influential Genes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                responsive: true,\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: influentialGenes.map((gene, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: gene\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 25\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                tag: \"h4\",\n                children: \"Statistical Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                responsive: true,\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  className: \"text-primary\",\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: thead.map((prop, key) => /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: prop\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 248,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: tbody.map((prop, key) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: prop.data.map((data, key) => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: data\n                    }, key, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 27\n                    }, this))\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardFooter, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                onClick: downloadPDF,\n                children: \"Download as PDF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Dashboard, \"KikUD1iaSVmIW7cAkh1g/+xJSU4=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Table","Button","Row","Col","Card","CardHeader","CardBody","CardFooter","CardTitle","Input","jsPDF","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","thead","tbody","data","Dashboard","_s","disease","setDisease","datasetFile","setDatasetFile","datasetId","setDatasetId","splittingColumn","setSplittingColumn","influentialGenes","setInfluentialGenes","ifgFilePath","setIfgFilePath","geneCount","setGeneCount","token","localStorage","getItem","navigate","handleUploadDataset","alert","formData","FormData","append","response","fetch","method","headers","Authorization","body","json","ok","dataset_id","error","console","handleFindIFG","JSON","stringify","splitting_columns","ifg_file","ifg_file_path","downloadPDF","doc","text","columns","rows","map","item","autoTable","startY","head","save","children","className","xs","md","responsive","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","files","onClick","tag","style","margin","textAlign","gene","index","prop","key","_c","$RefreshReg$"],"sources":["D:/project-spl3/ifg-finder-front/src/views/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Table, Button, Row, Col, Card, CardHeader, CardBody, CardFooter, CardTitle, Input } from \"reactstrap\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Mocked table headers and body data for display and PDF export\nconst thead = [\"Gene Name (Hugo Symbol)\", \"P Value\", \"Adjusted P Value\"];\nconst tbody = [\n  { data: [\"DDX5\", \"1.576534e-06\", \"0.029885\"] },\n  { data: [\"SYNJ2\", \"2.176070e-06\", \"0.041250\"] },\n];\n\nfunction Dashboard() {\n  const [disease, setDisease] = useState(\"\");\n  const [datasetFile, setDatasetFile] = useState(null);\n  const [datasetId, setDatasetId] = useState(null); // To store uploaded dataset ID\n  const [splittingColumn, setSplittingColumn] = useState(\"\");\n  const [influentialGenes, setInfluentialGenes] = useState([]);\n  const [ifgFilePath, setIfgFilePath] = useState(\"\"); // To store IFG file path\n  const [geneCount, setGeneCount] = useState(0); // Total number of genes\n\n  const token = localStorage.getItem('token'); // Assuming JWT token is stored here\n\n  // Navigate hook for redirecting\n  const navigate = useNavigate();\n\n  // Upload Dataset Handler\n  const handleUploadDataset = async () => {\n    if (!disease || !datasetFile) {\n      alert(\"Please provide both disease and dataset file.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"disease\", disease);\n    formData.append(\"dataset_path\", datasetFile);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/dataset/upload/\", {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n        body: formData,\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Dataset uploaded and preprocessed successfully\");\n        setDatasetId(data.dataset_id); // Store the dataset ID for next steps\n        setGeneCount(18750); // Mock gene count from the uploaded dataset\n      } else {\n        alert(\"Dataset upload failed\");\n      }\n    } catch (error) {\n      console.error(\"Error during dataset upload:\", error);\n      alert(\"An error occurred while uploading the dataset.\");\n    }\n  };\n\n  // Find Influential Genes (IFG) Handler\n  const handleFindIFG = async () => {\n    if (!datasetId || !splittingColumn) {\n      alert(\"Please provide a valid splitting column and upload dataset.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/api/ifg/find/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n        body: JSON.stringify({ dataset_id: datasetId, splitting_columns: splittingColumn }),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Influential genes calculated successfully\");\n        setInfluentialGenes([\"DDX5\", \"SYNJ2\"]); // Mock influential gene data\n        setIfgFilePath(data.ifg_file.ifg_file_path); // Store IFG file path\n      } else {\n        alert(\"Failed to calculate influential genes\");\n      }\n    } catch (error) {\n      console.error(\"Error during IFG calculation:\", error);\n      alert(\"An error occurred while calculating IFG.\");\n    }\n  };\n\n  // Download PDF Functionality\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n    doc.text(\"Statistical Report\", 20, 10);\n\n    const columns = [\"Gene Name (Hugo Symbol)\", \"P Value\", \"Adjusted P Value\"];\n    const rows = tbody.map(item => item.data);\n\n    doc.autoTable({\n      startY: 20,\n      head: [columns],\n      body: rows,\n    });\n\n    doc.save(\"statistical-report.pdf\");\n  };\n\n  return (\n    <>\n      <div className=\"content\">\n        <Row>\n          <Col xs={12} md={12}>\n            <Card className=\"card-tasks\">\n              <CardBody>\n                <Table responsive>\n                  <tbody>\n                    <tr>\n                      <td className=\"simple-text text-right\" color=\"primary\">Disease Information</td>\n                      <td>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Enter Disease\"\n                          value={disease}\n                          onChange={(e) => setDisease(e.target.value)}\n                        />\n                      </td>\n                      <td>\n                        <Input\n                          type=\"file\"\n                          onChange={(e) => setDatasetFile(e.target.files[0])}\n                        />\n                      </td>\n                      <td className=\"text-left\">\n                        <Button color=\"info\" onClick={handleUploadDataset}>Upload Dataset</Button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={4}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">Dataset</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div style={{ margin: '10px' }}>\n                  <h5>{'>'} File Format Changed</h5>\n                  <h5>{'>'} Null Values Removed</h5>\n                  <h5>{'>'} Preprocessing Done</h5>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs={12} md={4}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">Total Genes</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div style={{ margin: '10px', textAlign: 'center' }}>\n                  <h1>{geneCount}</h1>\n                  <h3><b>Genes</b></h3>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs={12} md={4}>\n            <Card className=\"card-chart\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">Total Attributes</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <div style={{ margin: '10px', textAlign: 'center' }}>\n                  <h1>172</h1>\n                  <h3><b>Columns</b></h3>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={12}>\n            <Card className=\"card-tasks\">\n              <CardBody>\n                <Table responsive>\n                  <tbody>\n                    <tr>\n                      <td className=\"simple-text text-right\" color=\"primary\">Splitting Attribute</td>\n                      <td>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Enter Column Number\"\n                          value={splittingColumn}\n                          onChange={(e) => setSplittingColumn(e.target.value)}\n                        />\n                      </td>\n                      <td className=\"text-left\">\n                        <Button color=\"primary\" onClick={handleFindIFG}>Find IFGs</Button>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} md={4}>\n            <Card className=\"card-tasks\">\n              <CardHeader>\n                <CardTitle tag=\"h4\">Influential Genes</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table responsive>\n                  <tbody>\n                    {influentialGenes.map((gene, index) => (\n                      <tr key={index}>\n                        <td>{gene}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs={12} md={8}>\n            <Card>\n              <CardHeader>\n                <CardTitle tag=\"h4\">Statistical Report</CardTitle>\n              </CardHeader>\n              <CardBody>\n                <Table responsive>\n                  <thead className=\"text-primary\">\n                    <tr>\n                      {thead.map((prop, key) => (\n                        <th key={key}>{prop}</th>\n                      ))}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tbody.map((prop, key) => (\n                      <tr key={key}>\n                        {prop.data.map((data, key) => (\n                          <td key={key}>{data}</td>\n                        ))}\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n              </CardBody>\n              <CardFooter>\n                <Button color=\"primary\" onClick={downloadPDF}>Download as PDF</Button>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,QAAQ,YAAY;AAC9G,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,KAAK,GAAG,CAAC,yBAAyB,EAAE,SAAS,EAAE,kBAAkB,CAAC;AACxE,MAAMC,KAAK,GAAG,CACZ;EAAEC,IAAI,EAAE,CAAC,MAAM,EAAE,cAAc,EAAE,UAAU;AAAE,CAAC,EAC9C;EAAEA,IAAI,EAAE,CAAC,OAAO,EAAE,cAAc,EAAE,UAAU;AAAE,CAAC,CAChD;AAED,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC0B,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC4B,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC8B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACgC,WAAW,EAAEC,cAAc,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACpD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/C,MAAMoC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMC,QAAQ,GAAG3B,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAM4B,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI,CAAClB,OAAO,IAAI,CAACE,WAAW,EAAE;MAC5BiB,KAAK,CAAC,+CAA+C,CAAC;MACtD;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEtB,OAAO,CAAC;IACnCoB,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAEpB,WAAW,CAAC;IAE5C,IAAI;MACF,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACPC,aAAa,EAAG,UAASb,KAAM;QACjC,CAAC;QACDc,IAAI,EAAER;MACR,CAAC,CAAC;MAEF,MAAMvB,IAAI,GAAG,MAAM0B,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,IAAIN,QAAQ,CAACO,EAAE,EAAE;QACfX,KAAK,CAAC,gDAAgD,CAAC;QACvDd,YAAY,CAACR,IAAI,CAACkC,UAAU,CAAC,CAAC,CAAC;QAC/BlB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,MAAM;QACLM,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDb,KAAK,CAAC,gDAAgD,CAAC;IACzD;EACF,CAAC;;EAED;EACA,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAAC9B,SAAS,IAAI,CAACE,eAAe,EAAE;MAClCa,KAAK,CAAC,6DAA6D,CAAC;MACpE;IACF;IAEA,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASb,KAAM;QACjC,CAAC;QACDc,IAAI,EAAEO,IAAI,CAACC,SAAS,CAAC;UAAEL,UAAU,EAAE3B,SAAS;UAAEiC,iBAAiB,EAAE/B;QAAgB,CAAC;MACpF,CAAC,CAAC;MAEF,MAAMT,IAAI,GAAG,MAAM0B,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,IAAIN,QAAQ,CAACO,EAAE,EAAE;QACfX,KAAK,CAAC,2CAA2C,CAAC;QAClDV,mBAAmB,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;QACxCE,cAAc,CAACd,IAAI,CAACyC,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC;MAC/C,CAAC,MAAM;QACLpB,KAAK,CAAC,uCAAuC,CAAC;MAChD;IACF,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDb,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG,IAAIpD,KAAK,CAAC,CAAC;IACvBoD,GAAG,CAACC,IAAI,CAAC,oBAAoB,EAAE,EAAE,EAAE,EAAE,CAAC;IAEtC,MAAMC,OAAO,GAAG,CAAC,yBAAyB,EAAE,SAAS,EAAE,kBAAkB,CAAC;IAC1E,MAAMC,IAAI,GAAGhD,KAAK,CAACiD,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACjD,IAAI,CAAC;IAEzC4C,GAAG,CAACM,SAAS,CAAC;MACZC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,CAACN,OAAO,CAAC;MACff,IAAI,EAAEgB;IACR,CAAC,CAAC;IAEFH,GAAG,CAACS,IAAI,CAAC,wBAAwB,CAAC;EACpC,CAAC;EAED,oBACE1D,OAAA,CAAAE,SAAA;IAAAyD,QAAA,eACE3D,OAAA;MAAK4D,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACtB3D,OAAA,CAACX,GAAG;QAAAsE,QAAA,eACF3D,OAAA,CAACV,GAAG;UAACuE,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,EAAG;UAAAH,QAAA,eAClB3D,OAAA,CAACT,IAAI;YAACqE,SAAS,EAAC,YAAY;YAAAD,QAAA,eAC1B3D,OAAA,CAACP,QAAQ;cAAAkE,QAAA,eACP3D,OAAA,CAACb,KAAK;gBAAC4E,UAAU;gBAAAJ,QAAA,eACf3D,OAAA;kBAAA2D,QAAA,eACE3D,OAAA;oBAAA2D,QAAA,gBACE3D,OAAA;sBAAI4D,SAAS,EAAC,wBAAwB;sBAACI,KAAK,EAAC,SAAS;sBAAAL,QAAA,EAAC;oBAAmB;sBAAAM,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC/EpE,OAAA;sBAAA2D,QAAA,eACE3D,OAAA,CAACJ,KAAK;wBACJyE,IAAI,EAAC,MAAM;wBACXC,WAAW,EAAC,eAAe;wBAC3BC,KAAK,EAAE/D,OAAQ;wBACfgE,QAAQ,EAAGC,CAAC,IAAKhE,UAAU,CAACgE,CAAC,CAACC,MAAM,CAACH,KAAK;sBAAE;wBAAAN,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAC7C;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CAAC,eACLpE,OAAA;sBAAA2D,QAAA,eACE3D,OAAA,CAACJ,KAAK;wBACJyE,IAAI,EAAC,MAAM;wBACXG,QAAQ,EAAGC,CAAC,IAAK9D,cAAc,CAAC8D,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;sBAAE;wBAAAV,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACpD;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CAAC,eACLpE,OAAA;sBAAI4D,SAAS,EAAC,WAAW;sBAAAD,QAAA,eACvB3D,OAAA,CAACZ,MAAM;wBAAC4E,KAAK,EAAC,MAAM;wBAACY,OAAO,EAAElD,mBAAoB;wBAAAiC,QAAA,EAAC;sBAAc;wBAAAM,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACxE,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENpE,OAAA,CAACX,GAAG;QAAAsE,QAAA,gBACF3D,OAAA,CAACV,GAAG;UAACuE,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAH,QAAA,eACjB3D,OAAA,CAACT,IAAI;YAACqE,SAAS,EAAC,YAAY;YAAAD,QAAA,gBAC1B3D,OAAA,CAACR,UAAU;cAAAmE,QAAA,eACT3D,OAAA,CAACL,SAAS;gBAACkF,GAAG,EAAC,IAAI;gBAAAlB,QAAA,EAAC;cAAO;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC,eACbpE,OAAA,CAACP,QAAQ;cAAAkE,QAAA,eACP3D,OAAA;gBAAK8E,KAAK,EAAE;kBAAEC,MAAM,EAAE;gBAAO,CAAE;gBAAApB,QAAA,gBAC7B3D,OAAA;kBAAA2D,QAAA,GAAK,GAAG,EAAC,sBAAoB;gBAAA;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClCpE,OAAA;kBAAA2D,QAAA,GAAK,GAAG,EAAC,sBAAoB;gBAAA;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAClCpE,OAAA;kBAAA2D,QAAA,GAAK,GAAG,EAAC,qBAAmB;gBAAA;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9B;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENpE,OAAA,CAACV,GAAG;UAACuE,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAH,QAAA,eACjB3D,OAAA,CAACT,IAAI;YAACqE,SAAS,EAAC,YAAY;YAAAD,QAAA,gBAC1B3D,OAAA,CAACR,UAAU;cAAAmE,QAAA,eACT3D,OAAA,CAACL,SAAS;gBAACkF,GAAG,EAAC,IAAI;gBAAAlB,QAAA,EAAC;cAAW;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjC,CAAC,eACbpE,OAAA,CAACP,QAAQ;cAAAkE,QAAA,eACP3D,OAAA;gBAAK8E,KAAK,EAAE;kBAAEC,MAAM,EAAE,MAAM;kBAAEC,SAAS,EAAE;gBAAS,CAAE;gBAAArB,QAAA,gBAClD3D,OAAA;kBAAA2D,QAAA,EAAKvC;gBAAS;kBAAA6C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACpBpE,OAAA;kBAAA2D,QAAA,eAAI3D,OAAA;oBAAA2D,QAAA,EAAG;kBAAK;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENpE,OAAA,CAACV,GAAG;UAACuE,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAH,QAAA,eACjB3D,OAAA,CAACT,IAAI;YAACqE,SAAS,EAAC,YAAY;YAAAD,QAAA,gBAC1B3D,OAAA,CAACR,UAAU;cAAAmE,QAAA,eACT3D,OAAA,CAACL,SAAS;gBAACkF,GAAG,EAAC,IAAI;gBAAAlB,QAAA,EAAC;cAAgB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,eACbpE,OAAA,CAACP,QAAQ;cAAAkE,QAAA,eACP3D,OAAA;gBAAK8E,KAAK,EAAE;kBAAEC,MAAM,EAAE,MAAM;kBAAEC,SAAS,EAAE;gBAAS,CAAE;gBAAArB,QAAA,gBAClD3D,OAAA;kBAAA2D,QAAA,EAAI;gBAAG;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACZpE,OAAA;kBAAA2D,QAAA,eAAI3D,OAAA;oBAAA2D,QAAA,EAAG;kBAAO;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENpE,OAAA,CAACX,GAAG;QAAAsE,QAAA,eACF3D,OAAA,CAACV,GAAG;UAACuE,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,EAAG;UAAAH,QAAA,eAClB3D,OAAA,CAACT,IAAI;YAACqE,SAAS,EAAC,YAAY;YAAAD,QAAA,eAC1B3D,OAAA,CAACP,QAAQ;cAAAkE,QAAA,eACP3D,OAAA,CAACb,KAAK;gBAAC4E,UAAU;gBAAAJ,QAAA,eACf3D,OAAA;kBAAA2D,QAAA,eACE3D,OAAA;oBAAA2D,QAAA,gBACE3D,OAAA;sBAAI4D,SAAS,EAAC,wBAAwB;sBAACI,KAAK,EAAC,SAAS;sBAAAL,QAAA,EAAC;oBAAmB;sBAAAM,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eAC/EpE,OAAA;sBAAA2D,QAAA,eACE3D,OAAA,CAACJ,KAAK;wBACJyE,IAAI,EAAC,MAAM;wBACXC,WAAW,EAAC,qBAAqB;wBACjCC,KAAK,EAAEzD,eAAgB;wBACvB0D,QAAQ,EAAGC,CAAC,IAAK1D,kBAAkB,CAAC0D,CAAC,CAACC,MAAM,CAACH,KAAK;sBAAE;wBAAAN,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACrD;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA,CAAC,eACLpE,OAAA;sBAAI4D,SAAS,EAAC,WAAW;sBAAAD,QAAA,eACvB3D,OAAA,CAACZ,MAAM;wBAAC4E,KAAK,EAAC,SAAS;wBAACY,OAAO,EAAElC,aAAc;wBAAAiB,QAAA,EAAC;sBAAS;wBAAAM,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAChE,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENpE,OAAA,CAACX,GAAG;QAAAsE,QAAA,gBACF3D,OAAA,CAACV,GAAG;UAACuE,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAH,QAAA,eACjB3D,OAAA,CAACT,IAAI;YAACqE,SAAS,EAAC,YAAY;YAAAD,QAAA,gBAC1B3D,OAAA,CAACR,UAAU;cAAAmE,QAAA,eACT3D,OAAA,CAACL,SAAS;gBAACkF,GAAG,EAAC,IAAI;gBAAAlB,QAAA,EAAC;cAAiB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC,eACbpE,OAAA,CAACP,QAAQ;cAAAkE,QAAA,eACP3D,OAAA,CAACb,KAAK;gBAAC4E,UAAU;gBAAAJ,QAAA,eACf3D,OAAA;kBAAA2D,QAAA,EACG3C,gBAAgB,CAACqC,GAAG,CAAC,CAAC4B,IAAI,EAAEC,KAAK,kBAChClF,OAAA;oBAAA2D,QAAA,eACE3D,OAAA;sBAAA2D,QAAA,EAAKsB;oBAAI;sBAAAhB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK;kBAAC,GADRc,KAAK;oBAAAjB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAEV,CACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAENpE,OAAA,CAACV,GAAG;UAACuE,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAAH,QAAA,eACjB3D,OAAA,CAACT,IAAI;YAAAoE,QAAA,gBACH3D,OAAA,CAACR,UAAU;cAAAmE,QAAA,eACT3D,OAAA,CAACL,SAAS;gBAACkF,GAAG,EAAC,IAAI;gBAAAlB,QAAA,EAAC;cAAkB;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eACbpE,OAAA,CAACP,QAAQ;cAAAkE,QAAA,eACP3D,OAAA,CAACb,KAAK;gBAAC4E,UAAU;gBAAAJ,QAAA,gBACf3D,OAAA;kBAAO4D,SAAS,EAAC,cAAc;kBAAAD,QAAA,eAC7B3D,OAAA;oBAAA2D,QAAA,EACGxD,KAAK,CAACkD,GAAG,CAAC,CAAC8B,IAAI,EAAEC,GAAG,kBACnBpF,OAAA;sBAAA2D,QAAA,EAAewB;oBAAI,GAAVC,GAAG;sBAAAnB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAY,CACzB;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACRpE,OAAA;kBAAA2D,QAAA,EACGvD,KAAK,CAACiD,GAAG,CAAC,CAAC8B,IAAI,EAAEC,GAAG,kBACnBpF,OAAA;oBAAA2D,QAAA,EACGwB,IAAI,CAAC9E,IAAI,CAACgD,GAAG,CAAC,CAAChD,IAAI,EAAE+E,GAAG,kBACvBpF,OAAA;sBAAA2D,QAAA,EAAetD;oBAAI,GAAV+E,GAAG;sBAAAnB,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAY,CACzB;kBAAC,GAHKgB,GAAG;oBAAAnB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAIR,CACL;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC,eACXpE,OAAA,CAACN,UAAU;cAAAiE,QAAA,eACT3D,OAAA,CAACZ,MAAM;gBAAC4E,KAAK,EAAC,SAAS;gBAACY,OAAO,EAAE5B,WAAY;gBAAAW,QAAA,EAAC;cAAe;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAAC7D,EAAA,CAlQQD,SAAS;EAAA,QAYCR,WAAW;AAAA;AAAAuF,EAAA,GAZrB/E,SAAS;AAoQlB,eAAeA,SAAS;AAAC,IAAA+E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}