{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-spl3\\\\ifg-finder-front\\\\src\\\\account\\\\ForgetPasswordEmail.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport '../assets/css/style.css'; // Assuming your CSS file is named styles.css\nimport dnaImage from '../assets/img/DNA-Genetics.webp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ForgetPassEmail() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isFlipped, setIsFlipped] = useState(false);\n  const navigate = useNavigate();\n  const handleFlip = () => {\n    setIsFlipped(!isFlipped);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setError(''); // Clear previous errors\n    console.log(e);\n    // API request to send OTP\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/user/reset-otp/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        }) // Send the email as part of the POST body\n      });\n      if (response.ok) {\n        setSuccess('OTP sent successfully to your email.');\n        setTimeout(() => {\n          navigate('/otp-pass'); // Redirect to OTP verification page after success\n        }, 2000); // Redirect after 2 seconds\n      } else {\n        const errorData = await response.json();\n        setError(errorData.error || 'Failed to send OTP. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setError('An error occurred. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"flip\",\n      checked: isFlipped,\n      onChange: handleFlip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log_cover\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: isFlipped ? 'log_front log_flipped' : 'log_front',\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: dnaImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: isFlipped ? 'log_back log_flipped' : 'log_back',\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"images/backImg.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log_forms\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log_form-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log_login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"log_title\",\n            children: \"Reset Password Step-1/3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log_input-boxes\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"log_input-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-envelope\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Enter your email\",\n                  value: email,\n                  onChange: e => setEmail(e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"log_error\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 27\n              }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"log_success\",\n                children: success\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"log_button log_input-box\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"log_sign-up-text\",\n                children: [\"Back to home?     \", \"  \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/home\",\n                  htmlFor: \"flip\",\n                  children: \"Click now\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ForgetPassEmail, \"GQF6q/plxKJDeG8B/YVfG6Cy/rA=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgetPassEmail;\nexport default ForgetPassEmail;\nvar _c;\n$RefreshReg$(_c, \"ForgetPassEmail\");","map":{"version":3,"names":["React","useState","Link","useNavigate","dnaImage","jsxDEV","_jsxDEV","ForgetPassEmail","_s","email","setEmail","error","setError","success","setSuccess","isFlipped","setIsFlipped","navigate","handleFlip","handleSubmit","event","preventDefault","console","log","e","response","fetch","method","headers","body","JSON","stringify","ok","setTimeout","errorData","json","className","children","type","id","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","placeholder","value","target","required","to","htmlFor","_c","$RefreshReg$"],"sources":["D:/project-spl3/ifg-finder-front/src/account/ForgetPasswordEmail.js"],"sourcesContent":["import React, { useState } from 'react'; \r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../assets/css/style.css'; // Assuming your CSS file is named styles.css\r\nimport dnaImage from '../assets/img/DNA-Genetics.webp';\r\n\r\nfunction ForgetPassEmail() {\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isFlipped, setIsFlipped] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleFlip = () => {\r\n    setIsFlipped(!isFlipped);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setError(''); // Clear previous errors\r\n    console.log(e)\r\n    // API request to send OTP\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/api/user/reset-otp/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }), // Send the email as part of the POST body\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccess('OTP sent successfully to your email.');\r\n        setTimeout(() => {\r\n          navigate('/otp-pass'); // Redirect to OTP verification page after success\r\n        }, 2000); // Redirect after 2 seconds\r\n      } else {\r\n        const errorData = await response.json();\r\n        setError(errorData.error || 'Failed to send OTP. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending OTP:', error);\r\n      setError('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"log_container\">\r\n      <input type=\"checkbox\" id=\"flip\" checked={isFlipped} onChange={handleFlip} />\r\n      <div className=\"log_cover\">\r\n        <div className={isFlipped ? 'log_front log_flipped' : 'log_front'}>  \r\n          <img src={dnaImage} alt=\"\" />\r\n        </div>\r\n        <div className={isFlipped ? 'log_back log_flipped' : 'log_back'}>  \r\n          <img src=\"images/backImg.jpg\" alt=\"\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"log_forms\">\r\n        <div className=\"log_form-content\">\r\n          <div className=\"log_login-form\">\r\n            <div className=\"log_title\">Reset Password Step-1/3</div>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"log_input-boxes\">\r\n                <div className=\"log_input-box\">\r\n                  <i className=\"fas fa-envelope\"></i>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                </div>\r\n                {error && <p className=\"log_error\">{error}</p>}\r\n                {success && <p className=\"log_success\">{success}</p>}\r\n                <div className=\"log_button log_input-box\">\r\n                  <input type=\"submit\" value=\"Submit\" />\r\n                </div>\r\n                <div className=\"log_sign-up-text\">\r\n                  Back to home?     {\"  \"}   \r\n                  <Link to=\"/home\"  htmlFor=\"flip\">\r\n                    Click now\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ForgetPassEmail;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAO,yBAAyB,CAAC,CAAC;AAClC,OAAOC,QAAQ,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMgB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,UAAU,GAAGA,CAAA,KAAM;IACvBF,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACdU,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;IACd;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;QACxEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEtB;QAAM,CAAC,CAAC,CAAE;MACnC,CAAC,CAAC;MAEF,IAAIgB,QAAQ,CAACO,EAAE,EAAE;QACflB,UAAU,CAAC,sCAAsC,CAAC;QAClDmB,UAAU,CAAC,MAAM;UACfhB,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC;QACzB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ,CAAC,MAAM;QACL,MAAMiB,SAAS,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QACvCvB,QAAQ,CAACsB,SAAS,CAACvB,KAAK,IAAI,uCAAuC,CAAC;MACtE;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CC,QAAQ,CAAC,sCAAsC,CAAC;IAClD;EACF,CAAC;EAED,oBACEN,OAAA;IAAK8B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B/B,OAAA;MAAOgC,IAAI,EAAC,UAAU;MAACC,EAAE,EAAC,MAAM;MAACC,OAAO,EAAEzB,SAAU;MAAC0B,QAAQ,EAAEvB;IAAW;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7EvC,OAAA;MAAK8B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB/B,OAAA;QAAK8B,SAAS,EAAErB,SAAS,GAAG,uBAAuB,GAAG,WAAY;QAAAsB,QAAA,eAChE/B,OAAA;UAAKwC,GAAG,EAAE1C,QAAS;UAAC2C,GAAG,EAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACNvC,OAAA;QAAK8B,SAAS,EAAErB,SAAS,GAAG,sBAAsB,GAAG,UAAW;QAAAsB,QAAA,eAC9D/B,OAAA;UAAKwC,GAAG,EAAC,oBAAoB;UAACC,GAAG,EAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNvC,OAAA;MAAK8B,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxB/B,OAAA;QAAK8B,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC/B/B,OAAA;UAAK8B,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B/B,OAAA;YAAK8B,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAuB;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxDvC,OAAA;YAAM0C,QAAQ,EAAE7B,YAAa;YAAAkB,QAAA,eAC3B/B,OAAA;cAAK8B,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B/B,OAAA;gBAAK8B,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC5B/B,OAAA;kBAAG8B,SAAS,EAAC;gBAAiB;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACnCvC,OAAA;kBACEgC,IAAI,EAAC,MAAM;kBACXW,WAAW,EAAC,kBAAkB;kBAC9BC,KAAK,EAAEzC,KAAM;kBACbgC,QAAQ,EAAGjB,CAAC,IAAKd,QAAQ,CAACc,CAAC,CAAC2B,MAAM,CAACD,KAAK,CAAE;kBAC1CE,QAAQ;gBAAA;kBAAAV,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,EACLlC,KAAK,iBAAIL,OAAA;gBAAG8B,SAAS,EAAC,WAAW;gBAAAC,QAAA,EAAE1B;cAAK;gBAAA+B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAC7ChC,OAAO,iBAAIP,OAAA;gBAAG8B,SAAS,EAAC,aAAa;gBAAAC,QAAA,EAAExB;cAAO;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpDvC,OAAA;gBAAK8B,SAAS,EAAC,0BAA0B;gBAAAC,QAAA,eACvC/B,OAAA;kBAAOgC,IAAI,EAAC,QAAQ;kBAACY,KAAK,EAAC;gBAAQ;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC,eACNvC,OAAA;gBAAK8B,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,GAAC,oBACd,EAAC,IAAI,eACvB/B,OAAA,CAACJ,IAAI;kBAACmD,EAAE,EAAC,OAAO;kBAAEC,OAAO,EAAC,MAAM;kBAAAjB,QAAA,EAAC;gBAEjC;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrC,EAAA,CArFQD,eAAe;EAAA,QAKLJ,WAAW;AAAA;AAAAoD,EAAA,GALrBhD,eAAe;AAuFxB,eAAeA,eAAe;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}