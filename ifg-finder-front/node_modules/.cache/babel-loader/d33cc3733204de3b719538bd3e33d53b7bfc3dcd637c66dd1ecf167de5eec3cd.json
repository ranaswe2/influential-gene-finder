{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-spl3\\\\carcinoma-gene-finder-f\\\\src\\\\views\\\\TableList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegularTables() {\n  _s();\n  const [excelData, setExcelData] = useState(null);\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const binaryString = event.target.result;\n      const workbook = XLSX.read(binaryString, {\n        type: 'binary'\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const data = XLSX.utils.sheet_to_json(sheet, {\n        header: 1\n      });\n      setExcelData(data);\n    };\n    reader.readAsBinaryString(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), excelData && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: excelData[0].map((cell, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: cell\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: excelData.slice(1).map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: cell\n          }, cellIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(RegularTables, \"0UFmZMzUys8nNxomEAeIxt+Lq2M=\");\n_c = RegularTables;\nexport default RegularTables;\nvar _c;\n$RefreshReg$(_c, \"RegularTables\");","map":{"version":3,"names":["React","useState","XLSX","jsxDEV","_jsxDEV","RegularTables","_s","excelData","setExcelData","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","binaryString","result","workbook","read","type","sheetName","SheetNames","sheet","Sheets","data","utils","sheet_to_json","header","readAsBinaryString","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","cell","index","slice","row","rowIndex","cellIndex","_c","$RefreshReg$"],"sources":["D:/project-spl3/carcinoma-gene-finder-f/src/views/TableList.js"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\n\nfunction RegularTables() {\n  const [excelData, setExcelData] = useState(null);\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (event) => {\n      const binaryString = event.target.result;\n      const workbook = XLSX.read(binaryString, { type: 'binary' });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const data = XLSX.utils.sheet_to_json(sheet, { header: 1 });\n      setExcelData(data);\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileUpload} />\n      {excelData && (\n        <table>\n          <thead>\n            <tr>\n              {excelData[0].map((cell, index) => (\n                <th key={index}>{cell}</th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {excelData.slice(1).map((row, rowIndex) => (\n              <tr key={rowIndex}>\n                {row.map((cell, cellIndex) => (\n                  <td key={cellIndex}>{cell}</td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default RegularTables;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}