{"ast":null,"code":"var _jsxFileName = \"D:\\\\project-spl3\\\\ifg-finder-front\\\\src\\\\account\\\\OTPVerify.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport '../assets/css/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Verify() {\n  _s();\n  var _location$state, _location$state2;\n  const [otp, setOtp] = useState('');\n  const location = useLocation();\n  const navigate = useNavigate();\n  const email = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || ''; // Get email passed from signup\n  const p = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.email) || ''; // Get email passed from signup\n\n  const handleVerifyOtp = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/user/verify-otp/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          otp\n        })\n      });\n      if (response.ok) {\n        // OTP verified, now login the user automatically\n        handleLoginAfterOtp();\n      } else {\n        alert('Invalid OTP');\n      }\n    } catch (error) {\n      console.error('Error during OTP verification:', error);\n    }\n  };\n  const handleLoginAfterOtp = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/api/user/login/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password: 'your_password'\n        }) // Use password from signup (update if needed)\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token); // Store JWT token\n        navigate('/dashboard'); // Redirect to dashboard after login\n      } else {\n        alert('Login failed after OTP verification');\n      }\n    } catch (error) {\n      console.error('Error during login:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log_container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log_forms\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log_form-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"log_login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"log_title\",\n            children: \"Verification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleVerifyOtp,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"log_input-boxes\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"log_input-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-lock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  placeholder: \"X X X X X X\",\n                  required: true,\n                  value: otp,\n                  onChange: e => setOtp(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"log_button log_input-box\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Verify, \"NIfHbyv7CYTi/WCOnZ7Kq5WMVZg=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Verify;\nexport default Verify;\nvar _c;\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Verify","_s","_location$state","_location$state2","otp","setOtp","location","navigate","email","state","p","handleVerifyOtp","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","handleLoginAfterOtp","alert","error","console","password","data","json","localStorage","setItem","token","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/project-spl3/ifg-finder-front/src/account/OTPVerify.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport '../assets/css/style.css';\r\n\r\nfunction Verify() {\r\n  const [otp, setOtp] = useState('');\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const email = location.state?.email || ''; // Get email passed from signup\r\n  const p = location.state?.email || ''; // Get email passed from signup\r\n\r\n  const handleVerifyOtp = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/api/user/verify-otp/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, otp }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // OTP verified, now login the user automatically\r\n        handleLoginAfterOtp();\r\n      } else {\r\n        alert('Invalid OTP');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during OTP verification:', error);\r\n    }\r\n  };\r\n\r\n  const handleLoginAfterOtp = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8000/api/user/login/', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password: 'your_password' }), // Use password from signup (update if needed)\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem('token', data.token); // Store JWT token\r\n        navigate('/dashboard'); // Redirect to dashboard after login\r\n      } else {\r\n        alert('Login failed after OTP verification');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"log_container\">\r\n      <div className=\"log_forms\">\r\n        <div className=\"log_form-content\">\r\n          <div className=\"log_login-form\">\r\n            <div className=\"log_title\">Verification</div>\r\n            <form onSubmit={handleVerifyOtp}>\r\n              <div className=\"log_input-boxes\">\r\n                <div className=\"log_input-box\">\r\n                  <i className=\"fas fa-lock\"></i>\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"X X X X X X\"\r\n                    required\r\n                    value={otp}\r\n                    onChange={(e) => setOtp(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"log_button log_input-box\">\r\n                  <input type=\"submit\" value=\"Submit\" />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Verify;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}